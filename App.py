import streamlit as st
import pandas as pd
from datetime import datetime
import os

# Configura√ß√£o da p√°gina
st.set_page_config(page_title="IIS - Revis√£o por Pares", page_icon="üìù")

st.title("üìù IIS - Revis√£o por Pares - Metodologia Ativa")

# Arquivo CSV para armazenamento
CSV_FILE = "revisoes.csv"

# Lista dos grupos (incluindo grupo de teste)
grupos = [
    "3 - Rob√≥tica em Sa√∫de",
    "4 - Games na Sa√∫de",
    "5 - Intelig√™ncia Artificial na Sa√∫de",
    "6 - Mobile Health",
    "7 - Processamento de Imagens M√©dicas",
    "8 - Processamento de Sinais Biol√≥gicos",
    "12 - Bioinform√°tica",
    "99 - Grupo de Teste"
]

# Formul√°rio
st.subheader("üîç Identifica√ß√£o")

grupo_origem = st.selectbox("Seu grupo (quem faz a avalia√ß√£o):", grupos)
grupo_destino = st.selectbox(
    "Grupo que voc√™ est√° avaliando:", 
    [g for g in grupos if g != grupo_origem]
)

titulo = st.text_input("T√≠tulo do Trabalho Avaliado:")

st.subheader("üèÜ Avalia√ß√£o")

def criterio(nome, descricao):
    st.markdown(f"**{nome}**: {descricao}")
    return st.radio(
        f"Nota para {nome}",
        ["1 - Rejei√ß√£o Forte", "2 - Rejei√ß√£o", "3 - Rejei√ß√£o Fraca",
         "4 - Neutro", "5 - Aceita√ß√£o Fraca", "6 - Aceitar", "7 - Aceita√ß√£o Forte"],
        horizontal=True
    )

originalidade = criterio("Originalidade", "Ideias novas, criativas, solu√ß√µes originais?")
qualidade = criterio("Qualidade T√©cnica", "Conte√∫do consistente, bem fundamentado?")
relevancia = criterio("Relev√¢ncia", "Alinhado com os temas da disciplina?")
apresentacao = criterio("Apresenta√ß√£o", "Organiza√ß√£o, uso de gr√°ficos, clareza, refer√™ncias?")
analise = criterio("An√°lise Cr√≠tica", "H√° reflex√£o, discuss√£o e profundidade no tema?")
recomendacao = criterio("Recomenda√ß√£o Final", "Avalia√ß√£o geral do trabalho.")

st.subheader("üí¨ Coment√°rios")

comentario_autores = st.text_area("Coment√°rios para os autores (vis√≠vel aos avaliados):")
comentario_professor = st.text_area("Coment√°rios privados para o professor:")

if st.button("‚úÖ Enviar Avalia√ß√£o"):
    data_hora = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    dados = {
        "Data/Hora": data_hora,
        "Grupo Avaliador": grupo_origem,
        "Grupo Avaliado": grupo_destino,
        "T√≠tulo do Trabalho": titulo,
        "Originalidade": originalidade,
        "Qualidade": qualidade,
        "Relev√¢ncia": relevancia,
        "Apresenta√ß√£o": apresentacao,
        "An√°lise Cr√≠tica": analise,
        "Recomenda√ß√£o Final": recomendacao,
        "Coment√°rios para Autores": comentario_autores,
        "Coment√°rios para Professor": comentario_professor
    }

    # Verifica se o CSV j√° existe
    if os.path.exists(CSV_FILE):
        df_existente = pd.read_csv(CSV_FILE)
        df = pd.concat([df_existente, pd.DataFrame([dados])], ignore_index=True)
    else:
        df = pd.DataFrame([dados])

    df.to_csv(CSV_FILE, index=False)

    st.success("‚úÖ Avalia√ß√£o enviada e salva no arquivo CSV!")
    st.balloons()
